//1.1P SIT210 James Jones

// Define the pin connected to the LED
const int ledPin = 4;

// Define the pin connected to the push button
const int buttonPin = 6;

// Morse code representation for each letter in "James"
const int morseSequences[][5] = {
  {1, 3},         // J: .---
  {1, 3, 3, 3},   // A: .-
  {3, 3},         // M: --
  {1},            // E: .
  {1, 1, 1}       // S: ...
};

// Duration of a dot in milliseconds
const int dotDuration = 250;

// Setup function runs once when you press reset or power the board
void setup() {
  // Initialize the digital pin as an output
  pinMode(ledPin, OUTPUT);
  
  // Initialize the digital pin as an input
  pinMode(buttonPin, INPUT);
}

// Loop function runs repeatedly as long as the board has power
void loop() {
  // Check if the button is pressed
  if (digitalRead(buttonPin) == HIGH) {
    // Iterate through each letter in "James"
    for (int i = 0; i < 5; i++) {
      // Blink Morse code for the current letter
      blinkMorse(morseSequences[i], sizeof(morseSequences[i]) / sizeof(morseSequences[i][0]));
    }
  }
}

// Function to blink Morse code for a given sequence
void blinkMorse(const int sequence[], int length) {
  // Iterate through the elements in the sequence
  for (int i = 0; i < length; i++) {
    // Turn on the LED
    digitalWrite(ledPin, HIGH);
    
    // If the element represents a dot (1)
    if (sequence[i] == 1) {
      // Wait for dot duration
      delay(dotDuration);
    } 
    // If the element represents a dash (3)
    else if (sequence[i] == 3) {
      // Wait for dash duration (3 times the dot duration)
      delay(dotDuration * 3);
    }
    
    // Turn off the LED
    digitalWrite(ledPin, LOW);
    
    // Wait for gap between dots/dashes
    delay(dotDuration);
  }
  
  // Wait for gap between letters (3 times the dot duration)
  delay(dotDuration * 3);
}
